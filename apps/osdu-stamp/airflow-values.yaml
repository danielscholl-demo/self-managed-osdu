---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: airflow
spec:
  values:
    ########################################
    ## CONFIG | Airflow Configs
    ########################################
    airflow:
      ## SUB COMPONENT | Airflow dbMigrations
      dbMigrations:
        podLabels:
          aadpodidbinding: "airflow-identity"
      ## SUB COMPONENT | Airflow sync-users
      sync:
        podLabels:
          aadpodidbinding: "airflow-identity"
      extraVolumes:
        - name: azure-keyvault
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-keyvault
      extraVolumeMounts:
        - name: azure-keyvault
          mountPath: "/mnt/azure-keyvault"
          readOnly: true
      extraConfigmapMounts:
        - name: remote-log-config
          mountPath: /opt/airflow/config
          configMap: airflow-remote-log-config
          readOnly: true
      extraPipPackages:
        [
          "flask-bcrypt==0.7.1",
          "toposort==1.6",
          "strict-rfc3339==0.7",
          "jsonschema==3.2.0",
          "pyyaml==5.4.1",
          "requests==2.25.1",
          "tenacity==8.0.1",
          "dataclasses==0.8",
          "apache-airflow[statsd]",
          "apache-airflow[kubernetes]",
          "apache-airflow-backport-providers-microsoft-azure==2021.2.5",
          "msal==1.9.0",
          "azure-identity==1.5.0",
          "azure-keyvault-secrets==4.2.0",
          "azure-storage-blob",
          "azure-servicebus==7.0.1",
          "google-cloud-storage",
          "python-keycloak==0.24.0",
        ]

      extraEnv:
        - name: AIRFLOW_VAR_AZURE_DNS_HOST
          value: "$DNS_HOST"
        # - name: CLOUD_PROVIDER
        #   value: "azure"
        # - name: AIRFLOW_VAR_AZURE_ENABLE_MSI
        #   value: "false"
        # - name: CI_COMMIT_TAG
        #   value: "v0.13.0"
        # - name: BUILD_TAG
        #   value: "v0.13.0"
        # - name: AIRFLOW_VAR_KEYVAULT_URI
        #   valueFrom:
        #     configMapKeyRef:
        #       name: osdu-svc-config
        #       key: ENV_KEYVAULT
        # - name: AIRFLOW__CORE__FERNET_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: airflow
        #       key: fernet-key
        # - name: AIRFLOW_CONN_AZ_LOG
        #   valueFrom:
        #     secretKeyRef:
        #       name: airflow
        #       key: remote-log-connection
        # - name: AIRFLOW_VAR_AZURE_TENANT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: active-directory
        #       key: tenantid
        # - name: AIRFLOW_VAR_AZURE_CLIENT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: active-directory
        #       key: principal-clientid
        # - name: AIRFLOW_VAR_AZURE_CLIENT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: active-directory
        #       key: principal-clientpassword
        # - name: AIRFLOW_VAR_AAD_CLIENT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: active-directory
        #       key: application-appid
        # - name: AIRFLOW_VAR_APPINSIGHTS_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: central-logging
        #       key: appinsights
        # - name: AIRFLOW_VAR_ENTITLEMENTS_MODULE_NAME
        #   value: "entitlements_client"
        # - name: AIRFLOW_VAR_CORE__CONFIG__DATALOAD_CONFIG_PATH
        #   value: "/opt/airflow/dags/configs/dataload.ini"
        # - name: AIRFLOW_VAR_CORE__SERVICE__SCHEMA__URL
        #   value: "http://schema.osdu-azure.svc.cluster.local/api/schema-service/v1/schema"
        # - name: AIRFLOW_VAR_CORE__SERVICE__SEARCH__URL
        #   value: "http://search.osdu-azure.svc.cluster.local/api/search/v2/query"
        # - name: AIRFLOW_VAR_CORE__SERVICE__STORAGE__URL
        #   value: "http://storage.osdu-azure.svc.cluster.local/api/storage/v2/records"
        # - name: AIRFLOW_VAR_CORE__SERVICE__FILE__HOST
        #   value: "http://file.osdu-azure.svc.cluster.local/api/file/v2"
        # - name: AIRFLOW_VAR_CORE__SERVICE__WORKFLOW__HOST
        #   value: "http://workflow.osdu-azure.svc.cluster.local/api/workflow"
        # - name: AIRFLOW_VAR_CORE__SERVICE__SEARCH_WITH_CURSOR__URL
        #   value: "http://search.osdu-azure.svc.cluster.local/api/search/v2/query_with_cursor"
      config:
        AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
        AIRFLOW__WEBSERVER__BASE_URL: "https://osdu-self-dplfhag-73n2-gw.westeurope.cloudapp.azure.com/airflow"

    ###################################
    ## COMPONENT | Airflow Scheduler
    ###################################
    scheduler:
      replicas: 2
      podLabels:
        aadpodidbinding: "airflow-identity"

    ###################################
    ## COMPONENT | Airflow Webserver
    ###################################
    web:
      replicas: 1
      podLabels:
        aadpodidbinding: "airflow-identity"

    ###################################
    ## COMPONENT | Airflow Workers
    ###################################
    workers:
      replicas: 3
      podLabels:
        aadpodidbinding: "airflow-identity"

    ###################################
    ## COMPONENT | Flower
    ###################################
    flower:
      enabled: false

    ###################################
    ## CONFIG | Airflow Logs
    ###################################
    logs:
      path: /opt/airflow/logs
      persistence:
        enabled: false

    ###################################
    ## CONFIG | Airflow DAGs
    ###################################
    dags:
      path: /opt/airflow/dags
      persistence:
        enabled: false
        existingClaim: airflowdag-pvc
        subPath: "dags"

    ###################################
    ## CONFIG | Kubernetes Ingress
    ###################################
    ingress:
      enabled: true
      web:
        annotations:
          kubernetes.io/ingress.class: azure/application-gateway
          appgw.ingress.kubernetes.io/request-timeout: "300"
          appgw.ingress.kubernetes.io/connection-draining: "true"
          appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
          cert-manager.io/cluster-issuer: letsencrypt-prod-dns
          cert-manager.io/acme-challenge-type: http01
        path: "/airflow"
        host: osdu-self-dplfhag-73n2-gw.westeurope.cloudapp.azure.com
        livenessPath: "/airflow/health"
        tls:
          enabled: true
          secretName: osdu-certificate
        precedingPaths:
          - path: "/airflow/*"
            serviceName: airflow-web
            servicePort: 8080

    ###################################
    ## DATABASE | PgBouncer
    ###################################
    pgbouncer:
      enabled: false

    ###################################
    ## DATABASE | Embedded Postgres
    ###################################
    postgresql:
      enabled: true

    ###################################
    ## DATABASE | External Database
    ###################################
    # externalDatabase:
    #   type: postgres
    #   host: osdu-self-dplfhag-73n2-pg.postgres.database.azure.com
    #   user: osdu_admin@osdu-self-dplfhag-73n2-pg
    #   passwordSecret: "postgres"
    #   passwordSecretKey: "postgres-password"
    #   port: 5432
    #   properties: "?sslmode=require"
    #   database: airflow

    ###################################
    ## DATABASE | Embedded Redis
    ###################################
    redis:
      enabled: false

    ###################################
    ## DATABASE | External Redis
    ###################################
    externalRedis:
      host: osdu-self-dplfhag-73n2-cache.redis.cache.windows.net
      passwordSecret: "redis"
      passwordSecretKey: "redis-password"
      port: 6380

    ###################################
    ## CONFIG | ServiceMonitor (Prometheus Operator)
    ###################################
    serviceMonitor:
      enabled: false

    ###################################
    ## CONFIG | PrometheusRule (Prometheus Operator)
    ###################################
    prometheusRule:
      enabled: false
